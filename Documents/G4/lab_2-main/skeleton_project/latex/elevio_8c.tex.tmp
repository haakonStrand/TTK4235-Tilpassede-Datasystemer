\hypertarget{elevio_8c}{}\doxysection{source/driver/elevio.c File Reference}
\label{elevio_8c}\index{source/driver/elevio.c@{source/driver/elevio.c}}


\mbox{\hyperlink{elevio_8c}{elevio.\+c}} includes functions for operating the elevator, it includes initialization, motordirection buttonlamp, floorindicator, opendoorlamp, stoplamp, osv.  


{\ttfamily \#include $<$assert.\+h$>$}\newline
{\ttfamily \#include $<$stdlib.\+h$>$}\newline
{\ttfamily \#include $<$sys/types.\+h$>$}\newline
{\ttfamily \#include $<$sys/socket.\+h$>$}\newline
{\ttfamily \#include $<$netdb.\+h$>$}\newline
{\ttfamily \#include $<$stdio.\+h$>$}\newline
{\ttfamily \#include $<$pthread.\+h$>$}\newline
{\ttfamily \#include \char`\"{}elevio.\+h\char`\"{}}\newline
{\ttfamily \#include \char`\"{}con\+\_\+load.\+h\char`\"{}}\newline
Include dependency graph for elevio.\+c\+:
% FIG 0
\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \mbox{\hyperlink{elevio_8c_acec5e6d14134b881216887fe15aca830}{elevio\+\_\+init}} (void)
\begin{DoxyCompactList}\small\item\em Initializes the elevator by setting the ip, and the port that should be used. It also loads the elevio.\+con file that is made from the make file. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{elevio_8c_ab2e6dcf199387c1dd6f78e2bf6fff56e}{elevio\+\_\+motor\+Direction}} (Motor\+Direction dirn)
\begin{DoxyCompactList}\small\item\em The function sets the motor direction. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{elevio_8c_a182079eb4c29f71ff3b5049a2fd082a3}{elevio\+\_\+button\+Lamp}} (int floor, Button\+Type button, int value)
\begin{DoxyCompactList}\small\item\em turns on button lamp when pressed \end{DoxyCompactList}\item 
void \mbox{\hyperlink{elevio_8c_a184a3b9bd68d9f38ada735288059b823}{elevio\+\_\+floor\+Indicator}} (int floor)
\begin{DoxyCompactList}\small\item\em indicates what floor the elevator is on by turning on an L\+ED on the device. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{elevio_8c_a7784247f816e8beee3a0538f070d9357}{elevio\+\_\+door\+Open\+Lamp}} (int value)
\begin{DoxyCompactList}\small\item\em Indicates that the door is open. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{elevio_8c_ac0411a180087d6ac13a3d97eda809ba0}{elevio\+\_\+stop\+Lamp}} (int value)
\begin{DoxyCompactList}\small\item\em lamp on device that indicates that the elevator has come to a halt. \end{DoxyCompactList}\item 
int \mbox{\hyperlink{elevio_8c_a2485d7d293f03756a852ee1f796b9e1f}{elevio\+\_\+call\+Button}} (int floor, Button\+Type button)
\begin{DoxyCompactList}\small\item\em collects information from the device, and returns 1 if the specific button is currently being pressed \end{DoxyCompactList}\item 
int \mbox{\hyperlink{elevio_8c_a6c30a3c0241ebf37a9014679e1bf288d}{elevio\+\_\+floor\+Sensor}} (void)
\begin{DoxyCompactList}\small\item\em sensor reading the floors, returns integer value corresponding to the floor the elevator is at. \end{DoxyCompactList}\item 
int \mbox{\hyperlink{elevio_8c_a73cf5844bdae806dc8d0afa3e0edab70}{elevio\+\_\+stop\+Button}} (void)
\begin{DoxyCompactList}\small\item\em listens wether or not the red stop button is being pressed, return a value of 1 or 0 depending on if is being pressed. Used to stop elevator. \end{DoxyCompactList}\item 
int \mbox{\hyperlink{elevio_8c_a96c87bf2164a6aa64d116f6137b8ee78}{elevio\+\_\+obstruction}} (void)
\begin{DoxyCompactList}\small\item\em function checks if the obstruction lever is on or off, returns 1 if active, 0 if not active. \end{DoxyCompactList}\end{DoxyCompactItemize}


\doxysubsection{Detailed Description}
\mbox{\hyperlink{elevio_8c}{elevio.\+c}} includes functions for operating the elevator, it includes initialization, motordirection buttonlamp, floorindicator, opendoorlamp, stoplamp, osv. 



\doxysubsection{Function Documentation}
\mbox{\Hypertarget{elevio_8c_a182079eb4c29f71ff3b5049a2fd082a3}\label{elevio_8c_a182079eb4c29f71ff3b5049a2fd082a3}} 
\index{elevio.c@{elevio.c}!elevio\_buttonLamp@{elevio\_buttonLamp}}
\index{elevio\_buttonLamp@{elevio\_buttonLamp}!elevio.c@{elevio.c}}
\doxysubsubsection{\texorpdfstring{elevio\_buttonLamp()}{elevio\_buttonLamp()}}
{\footnotesize\ttfamily void elevio\+\_\+button\+Lamp (\begin{DoxyParamCaption}\item[{int}]{floor,  }\item[{Button\+Type}]{button,  }\item[{int}]{value }\end{DoxyParamCaption})}



turns on button lamp when pressed 


\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em floor} & \\
\hline
\mbox{\texttt{ in}}  & {\em button} & \\
\hline
\mbox{\texttt{ in}}  & {\em value} & \\
\hline
\end{DoxyParams}


Definition at line 75 of file elevio.\+c.

\mbox{\Hypertarget{elevio_8c_a2485d7d293f03756a852ee1f796b9e1f}\label{elevio_8c_a2485d7d293f03756a852ee1f796b9e1f}} 
\index{elevio.c@{elevio.c}!elevio\_callButton@{elevio\_callButton}}
\index{elevio\_callButton@{elevio\_callButton}!elevio.c@{elevio.c}}
\doxysubsubsection{\texorpdfstring{elevio\_callButton()}{elevio\_callButton()}}
{\footnotesize\ttfamily int elevio\+\_\+call\+Button (\begin{DoxyParamCaption}\item[{int}]{floor,  }\item[{Button\+Type}]{button }\end{DoxyParamCaption})}



collects information from the device, and returns 1 if the specific button is currently being pressed 


\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em floor} & \\
\hline
\mbox{\texttt{ in}}  & {\em button} & \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
int 
\end{DoxyReturn}


Definition at line 134 of file elevio.\+c.

\mbox{\Hypertarget{elevio_8c_a7784247f816e8beee3a0538f070d9357}\label{elevio_8c_a7784247f816e8beee3a0538f070d9357}} 
\index{elevio.c@{elevio.c}!elevio\_doorOpenLamp@{elevio\_doorOpenLamp}}
\index{elevio\_doorOpenLamp@{elevio\_doorOpenLamp}!elevio.c@{elevio.c}}
\doxysubsubsection{\texorpdfstring{elevio\_doorOpenLamp()}{elevio\_doorOpenLamp()}}
{\footnotesize\ttfamily void elevio\+\_\+door\+Open\+Lamp (\begin{DoxyParamCaption}\item[{int}]{value }\end{DoxyParamCaption})}



Indicates that the door is open. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em value} & \\
\hline
\end{DoxyParams}


Definition at line 107 of file elevio.\+c.

\mbox{\Hypertarget{elevio_8c_a184a3b9bd68d9f38ada735288059b823}\label{elevio_8c_a184a3b9bd68d9f38ada735288059b823}} 
\index{elevio.c@{elevio.c}!elevio\_floorIndicator@{elevio\_floorIndicator}}
\index{elevio\_floorIndicator@{elevio\_floorIndicator}!elevio.c@{elevio.c}}
\doxysubsubsection{\texorpdfstring{elevio\_floorIndicator()}{elevio\_floorIndicator()}}
{\footnotesize\ttfamily void elevio\+\_\+floor\+Indicator (\begin{DoxyParamCaption}\item[{int}]{floor }\end{DoxyParamCaption})}



indicates what floor the elevator is on by turning on an L\+ED on the device. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em floor} & \\
\hline
\end{DoxyParams}


Definition at line 92 of file elevio.\+c.

\mbox{\Hypertarget{elevio_8c_a6c30a3c0241ebf37a9014679e1bf288d}\label{elevio_8c_a6c30a3c0241ebf37a9014679e1bf288d}} 
\index{elevio.c@{elevio.c}!elevio\_floorSensor@{elevio\_floorSensor}}
\index{elevio\_floorSensor@{elevio\_floorSensor}!elevio.c@{elevio.c}}
\doxysubsubsection{\texorpdfstring{elevio\_floorSensor()}{elevio\_floorSensor()}}
{\footnotesize\ttfamily int elevio\+\_\+floor\+Sensor (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}



sensor reading the floors, returns integer value corresponding to the floor the elevator is at. 

\begin{DoxyReturn}{Returns}
int 
\end{DoxyReturn}


Definition at line 150 of file elevio.\+c.

\mbox{\Hypertarget{elevio_8c_acec5e6d14134b881216887fe15aca830}\label{elevio_8c_acec5e6d14134b881216887fe15aca830}} 
\index{elevio.c@{elevio.c}!elevio\_init@{elevio\_init}}
\index{elevio\_init@{elevio\_init}!elevio.c@{elevio.c}}
\doxysubsubsection{\texorpdfstring{elevio\_init()}{elevio\_init()}}
{\footnotesize\ttfamily void elevio\+\_\+init (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}



Initializes the elevator by setting the ip, and the port that should be used. It also loads the elevio.\+con file that is made from the make file. 



Definition at line 26 of file elevio.\+c.

\mbox{\Hypertarget{elevio_8c_ab2e6dcf199387c1dd6f78e2bf6fff56e}\label{elevio_8c_ab2e6dcf199387c1dd6f78e2bf6fff56e}} 
\index{elevio.c@{elevio.c}!elevio\_motorDirection@{elevio\_motorDirection}}
\index{elevio\_motorDirection@{elevio\_motorDirection}!elevio.c@{elevio.c}}
\doxysubsubsection{\texorpdfstring{elevio\_motorDirection()}{elevio\_motorDirection()}}
{\footnotesize\ttfamily void elevio\+\_\+motor\+Direction (\begin{DoxyParamCaption}\item[{Motor\+Direction}]{dirn }\end{DoxyParamCaption})}



The function sets the motor direction. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em dirn} & from the enum struct {\ttfamily Motor\+Direction} , the function then sets the torque direction based upon input \\
\hline
\end{DoxyParams}


Definition at line 61 of file elevio.\+c.

\mbox{\Hypertarget{elevio_8c_a96c87bf2164a6aa64d116f6137b8ee78}\label{elevio_8c_a96c87bf2164a6aa64d116f6137b8ee78}} 
\index{elevio.c@{elevio.c}!elevio\_obstruction@{elevio\_obstruction}}
\index{elevio\_obstruction@{elevio\_obstruction}!elevio.c@{elevio.c}}
\doxysubsubsection{\texorpdfstring{elevio\_obstruction()}{elevio\_obstruction()}}
{\footnotesize\ttfamily int elevio\+\_\+obstruction (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}



function checks if the obstruction lever is on or off, returns 1 if active, 0 if not active. 

\begin{DoxyReturn}{Returns}
int 
\end{DoxyReturn}


Definition at line 182 of file elevio.\+c.

\mbox{\Hypertarget{elevio_8c_a73cf5844bdae806dc8d0afa3e0edab70}\label{elevio_8c_a73cf5844bdae806dc8d0afa3e0edab70}} 
\index{elevio.c@{elevio.c}!elevio\_stopButton@{elevio\_stopButton}}
\index{elevio\_stopButton@{elevio\_stopButton}!elevio.c@{elevio.c}}
\doxysubsubsection{\texorpdfstring{elevio\_stopButton()}{elevio\_stopButton()}}
{\footnotesize\ttfamily int elevio\+\_\+stop\+Button (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}



listens wether or not the red stop button is being pressed, return a value of 1 or 0 depending on if is being pressed. Used to stop elevator. 

\begin{DoxyReturn}{Returns}
int 
\end{DoxyReturn}


Definition at line 166 of file elevio.\+c.

\mbox{\Hypertarget{elevio_8c_ac0411a180087d6ac13a3d97eda809ba0}\label{elevio_8c_ac0411a180087d6ac13a3d97eda809ba0}} 
\index{elevio.c@{elevio.c}!elevio\_stopLamp@{elevio\_stopLamp}}
\index{elevio\_stopLamp@{elevio\_stopLamp}!elevio.c@{elevio.c}}
\doxysubsubsection{\texorpdfstring{elevio\_stopLamp()}{elevio\_stopLamp()}}
{\footnotesize\ttfamily void elevio\+\_\+stop\+Lamp (\begin{DoxyParamCaption}\item[{int}]{value }\end{DoxyParamCaption})}



lamp on device that indicates that the elevator has come to a halt. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em value} & \\
\hline
\end{DoxyParams}


Definition at line 119 of file elevio.\+c.

